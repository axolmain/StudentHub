@page "/chat"
@using StudentHub.Shared
@using Microsoft.AspNetCore.Authorization
@using System.Net.Http.Headers
@using System.Text
@attribute [Authorize]

@inject HttpClient Http
@inject AuthenticationStateProvider AuthenticationStateProvider
<style>
    body {
        font-family: 'Arial', sans-serif;
    }

    h3 {
        text-align: center;
        color: #333;
    }

    .chat-container {
        background-color: #f0f0f0;
        border: 1px solid #ddd;
        padding: 20px;
        border-radius: 10px;
        margin: 20px auto;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .chat-message {
        background-color: #fff;
        border: 1px solid #ddd;
        padding: 10px 15px;
        border-radius: 10px;
        margin-bottom: 10px;
        box-shadow: 0 1px 2px rgba(0,0,0,0.05);
    }

    .chat-input {
        width: calc(100% - 120px);
        padding: 10px;
        border-radius: 5px;
        border: 1px solid #ddd;
        margin-right: 10px;
    }

    .send-button {
        width: 100px;
        padding: 10px;
        border-radius: 5px;
        background-color: #5cb85c;
        color: white;
        border: none;
        cursor: pointer;
    }

    .send-button:hover {
        background-color: #4cae4c;
    }
</style>

<h3>Chat with ChatGPT</h3>
<div class="chat-container">
    @foreach (var message in messages)
    {
        <div class="chat-message">
            @message.UserId: @message.Message
        </div>
    }
</div>
<div style="text-align: center;">
    <InputFile OnChange="SelectFile" />
    <button class="btn btn-success btn-block m-1" 
            @onclick="UploadFile">Upload</button>
    <br/>
    <input class="chat-input" @bind="newMessage"/>
    <button class="send-button" @onclick="SendMessage">Send</button>
</div>


@code {
    private List<ChatMessage>? messages = new();
    private long maxFileSize = 1024 * 1024 * 3;
    private string newMessage;
    private AuthenticationState authState;
    private string userId = "";
    private bool fileUploaded = false;
    string? userGuid;

    protected override async Task OnInitializedAsync()
    {
        authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        messages = await Http.GetFromJsonAsync<List<ChatMessage>>($"Chat/GetMessages?userId={authState.User.Identity?.Name}");
        userGuid = await Http.GetStringAsync($"User/GetUserId?userName={authState.User.Identity?.Name}");
    }

    private async Task SendMessage()
    {
        var message = new ChatMessage
        {
            UserId = userGuid ?? "You",
            Message = newMessage,
            Timestamp = DateTime.Now
        };
        messages?.Add(message);
        await GetResponse();
    }

    private async Task GetResponse()
    {
        StringContent content = new StringContent(newMessage, Encoding.UTF8, "text/plain");
        var response = await Http.PostAsync($"octolearnapi/AiTools/sendChat?studySessionId=SingleSession&userGuid={userGuid}", content);

        if (response.IsSuccessStatusCode)
        {
            Console.WriteLine("Success");
            var responseMessage = await response.Content.ReadAsStringAsync();
            var chatResponse = new ChatMessage
            {
                UserId = "Pookie bot",
                Message = responseMessage,
                Timestamp = DateTime.Now
            };
            messages?.Add(chatResponse);
        }
        else
        {
            Console.WriteLine("Error");
        }
        newMessage = "";
    }
    private IBrowserFile? selectedFile;

    // Uploading a file to the DB
    private Task SelectFile(InputFileChangeEventArgs e)
    {
        selectedFile = e.File;
        return Task.CompletedTask;
    }

    private async Task UploadFile()
    {
        if (selectedFile != null)
        {
            await using var stream = selectedFile.OpenReadStream();
            using var content = new MultipartFormDataContent();
            using var fileContent = new StreamContent(stream);

            fileContent.Headers.ContentDisposition = new ContentDispositionHeaderValue("form-data")
            {
                Name = "file",
                FileName = selectedFile.Name
            };

            content.Add(fileContent);

            await Http.PostAsync($"octolearnapi/StudySession/makesession?sessionName=SingleSession&userGuid={userGuid}", content);
        }
    }
}