<style>
  .nav-item {
    display: flex;
    align-items: center;
    padding: 0.5rem 1rem;
    text-decoration: none;
    color: white;
  }
  .nav-item:hover {
    background-color: #333;
  }
  .nav-item .menu-text {
    margin-left: 0.5rem;
    display: @(!IconMenuActive ? "inline" : "none");
  }
  .nav-link.active {
    background-color: #0056b3;
  }
  .icon-menu-arrow {
    background: none;
    border: none;
    cursor: pointer;
  }
</style>

<div class="@NavMenuCssClass">
    <nav class="flex-column">
        <NavLink class="nav-item nav-link" href="" Match="NavLinkMatch.All">
            <span class="oi oi-home" aria-hidden="true"></span>
            <span class="menu-text">Home</span>
        </NavLink>
        <NavLink class="nav-item nav-link" href="chat">
            <span class="oi oi-chat" aria-hidden="true"></span>
            <span class="menu-text">Chat</span>
        </NavLink>
        <NavLink class="nav-item nav-link" href="tbd">
            <span class="oi oi-list-rich" aria-hidden="true"></span>
            <span class="menu-text">TBD</span>
        </NavLink>
    </nav>
</div>

<div class="bottom-row">
    <div class="icon-menu-arrow" @onclick="ToggleIconMenu">
        @if (!IconMenuActive)
        {
            <span class="oi oi-arrow-left" style="color: white;"></span>
        }
        else
        {
            <span class="oi oi-arrow-right" style="color: white;"></span>
        }
    </div>
</div>


@code {
    //bool to send to MainLayout for shrinking sidebar and showing/hide menu text
    private bool IconMenuActive { get; set; } = false;

    //EventCallback for sending bool to MainLayout
    [Parameter]
    public EventCallback<bool> ShowIconMenu { get; set; }

    public object NavMenuCssClass { get; set; }
    private string IconArrow => IconMenuActive ? "oi-arrow-right" : "oi-arrow-left";


    //Method to toggle IconMenuActive bool and send bool via EventCallback
    private async Task ToggleIconMenu()
    {
        IconMenuActive = !IconMenuActive;
        await ShowIconMenu.InvokeAsync(IconMenuActive);
    }

}